services:
  users-mngr:
    build:
      context: ./bbog-kata-users-mngr
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
    volumes:
      - ./bbog-kata-users-mngr:/app
      - /app/node_modules
    depends_on:
      users-db:
        condition: service_healthy

  users-web-ui:
    build:
      context: ./bbog-kata-users-web-ui
      dockerfile: Dockerfile.dev
      args:
        - ARTIFACTORY_READER_USER=${ARTIFACTORY_READER_USER}
        - ARTIFACTORY_READER_API_KEY=${ARTIFACTORY_READER_API_KEY}
    ports:
      - '4200:4200'
    environment:
      - NODE_ENV=development
    volumes:
      - ./bbog-kata-users-web-ui:/app
      - /app/node_modules
    depends_on:
      - users-mngr

  users-db:
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
